apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "25.0.2"
    defaultConfig {
        multiDexEnabled true
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        packagingOptions {
            exclude '/lib/mips64/**'
            exclude '/lib/arm64-v8a/**'
            exclude '/lib/x86_64/**'
        }
    }
    dexOptions {
      //  preDexLibraries false
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    provided fileTree(dir: 'libs', include: ['*.jar']).matching { include "classes.jar" }// provided, otherwise clases with Unity's own classes

    compile'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:support-v4:23.2.1'
    compile 'com.android.support:recyclerview-v7:23.2.1'

    compile("com.facebook.react:react-native:0.46.1@aar"){
        transitive = true
    }
    compile project(":UnityReactExport")
}

def unityPath = '/Users/marijnzwemmer/Projects/UnityReact/Unity/Assets/Plugins/Android';
def exportedName = 'UnityReact.aar';


task exportAar(type: Copy) {
    from 'build/outputs/aar/app-release.aar'
    into unityPath
    rename('app-release.aar', exportedName)
}


task deleteOldAar(type: Delete) {
    delete unityPath + '.'  + exportedName
}

exportAar.dependsOn(deleteOldAar);


task copyLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}


